// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#include <dt-bindings/zmk/outputs.h>
// &out OUT_USB | &out OUT_BLE | &out OUT_TOG
// soft reset: &sys_reset
// hard reset: &bootloader


#define L_DEF     0
#define L_SYM     2
#define L_NAV     3 
#define L_NUM     4

#define ALT_GRV    &ht LALT  GRAVE

/ {
    macros {
        // turn on dummy layer + &kp <param>
        sft: sft {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_press &mo 1>
                , <&macro_press &kp LSHIFT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &mo 1>
                ;
        };
    };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            retro-tap;
        };

        st: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            global-quick-tap;
            bindings = <&sft>, <&kp>;
            retro-tap;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp TAB    ALT_GRV    &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp LCTRL  &st 0 SPACE    &mo L_SYM  &mo L_NUM
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        dummy_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        symbol_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp BSLH   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp AMPS   &kp STAR   &kp LBRC   &kp RBRC   &kp CARET
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp QMARK  &kp EXCL   &kp COMMA  &kp DOT    &kp DQT        &kp UNDER  &kp EQUAL  &kp LPAR   &kp RPAR   &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp FSLH   &kp PIPE   &kp LT     &kp GT     &kp SQT        &kp MINUS  &kp PLUS   &kp LBKT   &kp RBKT   &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        navigation_layer {  bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp SPACE &kp RA(Q)  &kp RA(P)   &kp RA(Y)  &kp RA(S)      &kp PSCRN  &kp INS    &kp LSHFT  &kp DEL    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LSHFT &kp LALT   &kp LSHFT  &kp LCTRL   &kp CAPS       &kp LARW   &kp DARW   &kp UARW   &kp RARW   &kp TAB
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LCTRL &kp C_PLAY &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP  &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        number_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
            &kp F5     &kp F6     &kp F7     &kp F8     &kp F9         &kp COMMA   &kp N7      &kp N8      &kp N9      &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp F10   &kp LALT   &kp LSHFT  &kp LCTRL   &kp F12        &kp DOT     &kp N4      &kp N5      &kp N6      &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp RA(N5)  &kp N1      &kp N2      &kp N3      &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────╯
                                             &trans     &trans         &trans      &trans
        //                                 ╰──────────┴──────────╯   ╰───────────┴───────────╯
        >; };

        // TODO: mouse layer

        //game_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //    &kp ESC    &kp Q      &kp W      &kp E      &kp R          &kp T      &kp U      &kp I      &kp O      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //    &kp LSHFT  &kp A      &kp S      &kp D      &kp F          &kp G      &kp J      &kp K      &kp L      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //    &kp LCTRL  &kp Z      &kp X      &kp C      &kp V          &kp N      &kp M      &kp LALT   &kp LGUI   &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                     &kp TAB    &kp SPACE     &tog L_GAME &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        // >; };
    };
};
