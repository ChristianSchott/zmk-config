// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#include <dt-bindings/zmk/outputs.h>
// &out OUT_USB | &out OUT_BLE | &out OUT_TOG
// soft reset: &sys_reset
// hard reset: &bootloader


#define L_DEF     0
#define L_NAV     1 
#define L_SYM     2
#define L_NUM     4
#define L_LFN     5
#define L_RFN     6
#define L_GAME    7

/ {
    behaviors {
        ht: ht {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            retro-tap;
        };

        st: st {
            label = "space_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
            retro-tap;
        };

        td_ctl: tap_dance_ctl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTL>, <&mo L_LFN>;
        };

        td_num: tap_dance_num {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo L_NUM>, <&mo L_RFN>;
        };

        // st: st {
        //     label = "hold_tap";
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "balanced";
        //     tapping-term-ms = <135>;
        //     global-quick-tap;
        //     bindings = <&sft>, <&kp>;
        //     retro-tap;
        // };
    };
};

// / {
//     macros {
//         sft: sft {
//             compatible = "zmk,behavior-macro-one-param";
//             wait-ms = <0>;
//             tap-ms = <0>;
//             #binding-cells = <1>;
//             bindings
//                 = <&macro_param_1to1>, <&macro_press &mo MACRO_PLACEHOLDER &kp LSHFT>
//                 , <&macro_pause_for_release>
//                 , <&macro_param_1to1>, <&macro_release &mo MACRO_PLACEHOLDER &kp LSHFT>
//                 ;
//         };
//     };
// };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp GRAVE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &ht LALT SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &td_ctl   &st L_NAV SPACE &mo L_SYM   &td_num
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        navigation_layer {  bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp ESC   &kp RA(N5) &kp RA(S)  &kp PSCRN   &kp INS        &kp RA(Q)  &kp RA(P)  &kp RA(Y)  &kp DEL    &kp SPACE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp TAB   &kp LALT   &kp LSHFT  &kp LCTRL   &kp CAPS       &kp LARW   &kp DARW   &kp UARW   &kp RARW   &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LGUI  &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY  &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        symbol_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp BSLH   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp AMPS   &kp STAR   &kp LBRC   &kp RBRC   &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp QMARK  &kp EXCL   &kp SQT    &kp DQT    &kp CARET      &kp UNDER  &kp EQUAL  &kp LPAR   &kp RPAR   &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp FSLH   &kp PIPE   &kp LT     &kp GT     &kp RA(N5)     &kp MINUS  &kp PLUS   &kp LBKT   &kp RBKT   &kp COLON
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        dummy_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp LS(Q)  &kp LS(W) &kp LS(F)   &kp LS(P)  &kp LS(B)     &kp LS(J)   &kp LS(L)  &kp LS(U)  &kp LS(Y)  &kp LS(GRAVE)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LS(A)  &kp LS(R) &kp LS(S)   &kp LS(T)  &kp LS(G)     &kp LS(M)   &kp LS(N)  &kp LS(E)  &kp LS(I)  &kp LS(O)
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LS(Z)  &kp LS(X) &kp LS(C)   &kp LS(D)  &kp LS(V)     &kp LS(K)   &kp LS(H)  &kp LS(COMMA) &kp LS(DOT) &kp LS(SEMI)
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        number_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
            &kp F5     &kp F6     &kp F7     &kp F8     &kp F9         &kp COMMA   &kp N7      &kp N8      &kp N9      &kp DOT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp F10    &kp LALT   &kp LSHFT  &kp LCTRL  &kp F12        &kp N0      &kp N1      &kp N2      &kp N3      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp RA(N5)  &kp N4      &kp N5      &kp N6      &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────╯
                                             &trans     &trans         &trans      &trans
        //                                 ╰──────────┴──────────╯   ╰───────────┴───────────╯
        >; };

        fn_left_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
          &sys_reset  &kp RALT  &tog L_GAME &out OUT_USB &out OUT_BLE  &trans     &trans      &trans      &trans      &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp ESC  &kp LALT   &kp LSHFT  &kp LCTRL   &kp CAPS       &trans     &trans      &trans      &trans      &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp LGUI   &kp C_PLAY &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP  &trans     &trans      &trans      &trans      &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────╯
                                             &trans     &trans         &trans      &trans
        //                                 ╰──────────┴──────────╯   ╰───────────┴───────────╯
        >; };

        fn_right_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
            &trans     &trans     &trans     &trans     &trans       &out OUT_BLE &out OUT_USB &trans      &kp RALT   &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &trans     &trans     &trans     &trans     &trans       &kp CAPS     &kp LCTRL   &kp LSHFT    &kp LALT    &kp ESC               
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &trans     &trans     &trans     &trans     &trans       &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE  &kp C_PLAY  &kp LGUI   
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────╯
                                             &trans     &trans         &trans      &trans
        //                                 ╰──────────┴──────────╯   ╰───────────┴───────────╯
        >; };

        game_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
           &kp ESC    &kp Q      &kp W      &kp E      &kp R          &kp T      &kp U      &kp I      &kp O      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LSHFT  &kp A      &kp S      &kp D      &kp F          &kp G      &kp J      &kp K      &kp L      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
           &kp LCTRL  &kp Z      &kp X      &kp C      &kp V          &kp N      &kp M      &kp LALT   &kp LGUI   &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &tog L_GAME &kp SPACE     &tog L_GAME &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };
    };
};
