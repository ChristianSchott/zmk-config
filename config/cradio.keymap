// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#include <dt-bindings/zmk/outputs.h>
// &out OUT_USB | &out OUT_BLE | &out OUT_TOG
// soft reset: &sys_reset
// hard reset: &bootloader


#define L_DEF     0
#define L_ALT     1
#define L_SYM     2
#define L_NAV     3
#define L_FUN     4
#define L_INTL    5
#define L_GAME    6

#define CTL_SPACE  &mt LCTRL  SPACE
#define SHFT_ESC   &mt LSHIFT ESC
#define GUI_TAB    &mt LGUI   TAB
#define ALT_GRV    &mt LALT   GRAVE
#define INTL_RET   &lt L_INTL RET
#define BT(x)      &bt BT_SEL x

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      GUI_TAB    ALT_GRV    INTL_RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &mo L_NAV  CTL_SPACE      SHFT_ESC   &mo L_SYM
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        qwerty_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                                    
        >; };

        symbol_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp TILDE  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp AMPS   &kp STAR   &kp LBRC   &kp RBRC   &kp CARET
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp QMARK  &kp EXCL   &kp COMMA  &kp DOT    &kp DQT        &kp UNDER  &kp EQUAL  &kp LPAR   &kp RPAR   &kp COLON
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp FSLH   &kp PIPE   &kp LT     &kp GT     &kp SQT        &kp MINUS  &kp PLUS   &kp LBKT   &kp RBKT   &kp SEMI
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        navigation_layer {  bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp LALT   &kp N7     &kp N8     &kp N9     &kp EQUAL      &kp RET    &kp TAB    &kp INS    &kp DEL    &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LSHFT  &kp N4     &kp N5     &kp N6     &kp N0         &kp SPACE  &kp LARW   &kp DARW   &kp UARW   &kp RARW  
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LCTRL  &kp N1     &kp N2     &kp N3     &kp DOT        &kp BSLH   &kp HOME   &kp PG_DN  &kp PG_UP  &kp END
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };

        function_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────╮
            &kp LALT   &kp F7     &kp F8     &kp F9     BT(0)          &kp ESC   &out OUT_USB &out OUT_BLE &bt BT_CLR  &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp LSHFT  &kp F4     &kp F5     &kp F6     BT(1)          &kp LGUI    &kp F10     &kp F11     &kp F12      &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
            &kp LCTRL  &kp F1     &kp F2     &kp F3     BT(2)          &trans      &trans      &trans      &trans      &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├───────────┼───────────┼───────────┴───────────┴───────────╯
                                             &trans     &trans         &trans      &trans
        //                                 ╰──────────┴──────────╯   ╰───────────┴───────────╯
        >; };

        international_layer {   bindings = <
        //╭───────────┬───────────┬───────────┬───────────┬───────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
           &trans       &trans      &trans      &trans      &trans          &kp PSCRN    &kp SLCK     &kp KP_NUM   &kp C_RESET  &kp C_VOL_UP
        //├───────────┼───────────┼───────────┼───────────┼───────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
            &kp RA(Q)   &kp RA(P)   &kp RA(Y)   &kp RA(S)   &kp RA(N5)      &tog L_ALT  &out OUT_USB &out OUT_BLE  &trans       &kp C_VOL_DN
        //├───────────┼───────────┼───────────┼───────────┼───────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
            &trans      &trans      &trans      &trans      &trans          &trans       &trans       &trans       &trans       &trans
        //╰───────────┴───────────┴───────────┼───────────┼───────────┤   ├────────────┼────────────┼────────────┴────────────┴────────────╯
                                                &trans      &trans          &trans       &tog L_GAME
        //                                    ╰───────────┴───────────╯   ╰────────────┴────────────╯
        >; };

        game_layer {   bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            &kp ESC    &kp Q      &kp W      &kp E      &kp R          &kp T      &kp U      &kp I      &kp O      &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LSHFT  &kp A      &kp S      &kp D      &kp F          &kp G      &kp J      &kp K      &kp L      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
            &kp LCTRL  &kp Z      &kp X      &kp C      &kp V          &kp N      &kp M      &kp LALT   &kp LGUI   &kp RET
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &kp TAB    &kp SPACE     &tog L_GAME &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >; };
    };
};
